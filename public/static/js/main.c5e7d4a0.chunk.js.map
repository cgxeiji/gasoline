{"version":3,"sources":["Login.jsx","Input.jsx","NewEntry.jsx","EntryItem.jsx","EntryBar.jsx","Entries.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","firebaseui","AuthUI","getInstance","firebase","auth","start","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","console","log","uiShown","document","getElementById","style","display","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","id","Input","props","classes","makeStyles","theme","root","padding","spacing","button","marginTop","useStyles","useState","gas","setGas","distance","setDistance","Container","className","TextField","variant","fullWidth","margin","label","placeholder","InputProps","endAdornment","InputAdornment","position","InputLabelProps","shrink","value","type","autoComplete","onChange","event","target","Typography","component","color","toFixed","Button","size","onClick","newEntry","NewEntry","Paper","EntryItem","marginRight","userStyles","ListItem","toDelete","IconButton","onDelete","entryId","DeleteForever","ListItemText","primary","secondary","Date","timestamp","toDateString","parseFloat","EntryBar","marginLeft","Edit","Entries","db","database","dbEntries","ref","dbUsers","paper","entries","setEntries","setToDelete","useEffect","userId","child","on","snapshot","exists","key","once","then","s","old","val","undefined","update","remove","filter","e","Grid","container","item","xs","entry","now","push","List","map","idx","apps","length","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","React","useMemo","createMuiTheme","palette","isLogged","setIsLogged","setUserId","onAuthStateChanged","user","uid","error","ThemeProvider","CssBaseline","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c5e7d4a0.chunk.js","sourcesContent":["import React from \"react\"\nimport firebase from \"firebase\"\nimport * as firebaseui from 'firebaseui'\nimport 'firebaseui/dist/firebaseui.css'\nimport 'firebase/auth'\n\nexport default function Login() {\n    const auth = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(firebase.auth());\n\n    auth.start('#firebaseui-auth-container', {\n\n        callbacks: {\n            signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n                console.log(\"logged\");\n                return false;\n            },\n            uiShown: function() {\n                // The widget is rendered.\n                // Hide the loader.\n                document.getElementById('loader').style.display = 'none';\n            }\n        },\n\n        signInOptions: [\n            {\n                provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n            },\n            {\n                provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            },\n        ]\n    });\n\n    return (\n        <div>\n            <div id=\"firebaseui-auth-container\"></div>\n            <div id=\"loader\">Loading</div>\n        </div>\n    );\n}\n","import React, {useState} from \"react\"\nimport {\n    Button,\n    Container,\n    TextField,\n    InputAdornment,\n    Typography,\n} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\n\n\nexport default function Input(props) {\n    const useStyles = makeStyles(theme => ({\n        root: {\n            padding: theme.spacing(3),\n        },\n        button: {\n            marginTop: theme.spacing(2),\n        }\n    }));\n\n    const classes = useStyles();\n\n    const [gas, setGas] = useState(\"\")\n    const [distance, setDistance] = useState(\"\")\n\n    return (\n        <Container className={classes.root} >\n\n            <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                id=\"gas\"\n                label=\"Gasoline\"\n                placeholder=\"0.00\"\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">L</InputAdornment>,\n                }}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                value={gas}\n                type=\"number\"\n                autoComplete=\"off\"\n                onChange={event => {\n                    setGas(event.target.value);\n                }}\n            />\n\n            <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                id=\"distance\"\n                label=\"Distance\"\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">km</InputAdornment>,\n                }}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                placeholder=\"0.0\"\n                type=\"number\"\n                autoComplete=\"off\"\n                value={distance}\n                onChange={event => {\n                    setDistance(event.target.value);\n                }}\n            />\n\n            <Typography variant=\"h2\" component=\"p\" color=\"secondary\">\n                {(gas !== 0 && gas !== \"\" ? distance/gas : 0).toFixed(2)} km/L\n            </Typography>\n\n            <Button\n                className={classes.button}\n                variant=\"contained\"\n                size=\"large\"\n                fullWidth\n                onClick={event => {\n                    if (gas === 0 || gas === \"\") return;\n                    if (distance === 0 || distance === \"\") return;\n                    props.newEntry({\n                        gas: gas,\n                        distance: distance,\n                    });\n                    setGas(\"\");\n                    setDistance(\"\");\n                }}\n            >\n                Add!\n            </Button>\n\n        </Container>\n    );\n}\n","import React from \"react\"\nimport {\n    Paper,\n} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Input from \"./Input\"\n\n\nexport default function NewEntry(props) {\n    const useStyles = makeStyles(theme => ({\n        root: {\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Paper>\n                <Input\n                    newEntry={props.newEntry}\n                />\n            </Paper>\n        </div>\n    );\n\n};\n","import React from \"react\"\nimport {\n    ListItem, ListItemText,\n    IconButton,\n} from \"@material-ui/core\"\nimport {\n    DeleteForever\n} from '@material-ui/icons'\nimport {makeStyles} from \"@material-ui/core/styles\"\n\n\nexport default function EntryItem(props) {\n    const userStyles = makeStyles(theme => ({\n        button: {\n            marginRight: theme.spacing(2),\n        },\n    }));\n    const classes = userStyles();\n\n    return (\n        <ListItem\n            key={props.entryId}\n        >\n            {props.toDelete &&\n            <IconButton className={classes.button} component=\"span\" color=\"secondary\"\n                onClick={() => {\n                    props.onDelete(props.entryId);\n                }}\n            >\n                <DeleteForever/>\n            </IconButton>\n            }\n            <ListItemText\n                primary={(props.distance/props.gas).toFixed(2) + \" km/L\"}\n                secondary={new Date(props.timestamp).toDateString() + \": \" + parseFloat(props.gas).toFixed(2) + \" L  \" + parseFloat(props.distance).toFixed(1) + \" km\"}\n            />\n        </ListItem>\n    );\n}\n","import React from \"react\"\nimport {\n    IconButton,\n} from \"@material-ui/core\"\nimport {\n    Edit\n} from '@material-ui/icons'\nimport {makeStyles} from \"@material-ui/core/styles\"\n\nexport default function EntryBar(props) {\n    const userStyles = makeStyles(theme => ({\n        root: {\n            marginLeft: 'auto',\n        },\n        button: {\n            marginRight: theme.spacing(2),\n        },\n    }));\n    const classes = userStyles();\n\n    return (\n        <div className={classes.root}>\n            <IconButton className={classes.button} component=\"span\"\n                onClick={() => {\n                    props.onClick();\n                }}\n            >\n                <Edit/>\n            </IconButton>\n        </div>\n    );\n}\n","import React, {useState, useEffect} from \"react\"\nimport {\n    Paper,\n    Grid,\n    List,\n    Typography,\n} from \"@material-ui/core\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport NewEntry from \"./NewEntry\"\nimport firebase from \"firebase\"\nimport 'firebase/database'\nimport EntryItem from \"./EntryItem\"\nimport EntryBar from \"./EntryBar\"\n\nexport default function Entries(props) {\n    const db = firebase.database();\n    const dbEntries = db.ref('entries');\n    const dbUsers = db.ref('users');\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            marginTop: theme.spacing(2),\n        },\n        paper: {\n            padding: theme.spacing(2),\n        },\n    }));\n    const classes = useStyles();\n\n    const [entries, setEntries] = useState([]);\n    const [toDelete, setToDelete] = useState(false);\n\n    useEffect(() => {\n        if (props.userId !== \"\") {\n            dbUsers.child(props.userId).on(\"child_added\", (snapshot) => {\n\n                if (!snapshot.exists()) return;\n                dbEntries.child(snapshot.key).once('value')\n                    .then(s => {\n                        setEntries(old => ([\n                            {\n                                ...s.val(),\n                                id: s.key,\n                            },\n                            ...old,\n                        ]));\n                    });\n            }\n            );\n        }\n    }, [props.userId]);\n\n    const onDelete = (entryId) => {\n        if (entryId === undefined) return;\n\n        if (props.userId !== \"\") {\n            dbUsers.child(props.userId).update({\n                [entryId]: null,\n            });\n            dbEntries.child(entryId).remove();\n            setEntries(old => {\n                const filter = old.filter(e => e.id !== entryId);\n                return filter;\n            });\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={1}>\n\n                <Grid item xs={12}>\n                    <NewEntry\n                        newEntry={entry => {\n                            const e = {\n                                ...entry,\n                                timestamp: Date.now(),\n                            };\n                            const entryId = dbEntries.push(e).key;\n                            dbUsers.child(props.userId).update({[entryId]: true});\n                        }}\n                    />\n                </Grid>\n\n                <EntryBar\n                    onClick={() => {\n                        setToDelete(old => (!old));\n                    }}\n                />\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h4\" component=\"h2\">\n                            History\n                        </Typography>\n\n                        <List>\n                            {entries.map((e, idx) => (\n                                <EntryItem\n                                    key={e.id}\n                                    entryId={e.id}\n                                    distance={e.distance}\n                                    gas={e.gas}\n                                    timestamp={e.timestamp}\n                                    toDelete={toDelete}\n                                    onDelete={onDelete}\n                                />\n                            ))}\n                        </List>\n\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n}\n","import React, {useState} from \"react\"\nimport firebase from \"firebase/app\"\nimport \"firebase/analytics\"\nimport \"firebase/auth\"\nimport Login from \"./Login\"\nimport Main from \"./Entries\"\nimport {\n    Container,\n} from \"@material-ui/core\"\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DB_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n!firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n\nfunction App() {\n    const darkMode = true;\n    const theme = React.useMemo(() =>\n        createMuiTheme({\n            palette: {\n                type: darkMode ? 'dark' : 'light',\n            },\n        }),\n        [darkMode],\n    );\n\n    const [isLogged, setIsLogged] = useState(false);\n    const [userId, setUserId] = useState(\"\");\n\n    firebase.auth().onAuthStateChanged( user => {\n        if (user) {\n            setIsLogged(true);\n            setUserId(user.uid);\n        } else {\n            setIsLogged(false);\n        }\n    },\n        error => {\n            console.log(error);\n        });\n\n    return (\n        <ThemeProvider theme={theme} >\n            <CssBaseline />\n            <Container maxWidth=\"sm\">\n                {isLogged ?\n                    <Main\n                        userId={userId}\n                    />\n                    :\n                    <Login /> }\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}